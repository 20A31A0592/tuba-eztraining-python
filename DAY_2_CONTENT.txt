####BITWISE OPERATORS####
1. 0's and 1's 
2. some operations if you do like this it will be faster like-compression data
3. sending data in n/w to n/w
4. 0-1 or ON OFF or true false

AND(&)
OR(|)
NOT(~)
XOR(^)
LEFT SHIFT(<<)
RIGHT SHIFT(>>)

###EXAMPLES###
>>>10 & 4
0
>>>12 | 7
15
>>>~4
-5
>>>~4.5
TypeError: bad operand type for unary ~: 'float'
>>>5^6
3
>>>10<<2
40
>>>10>>2
2
------------------------------------------------------------------------------------------------------
###MULTIPLE INPUTS IN LIST IN SINGLE LINE###

>>>n=int(input("size:"))
size:4
>>>a=list(map(int,input("enter:").strip().split(",")))[:n]
enter:1,2,3,4
>>>a
[1, 2, 3, 4]

>>>n=int(input("size:"))
size:4
>>>a=list(map(int,input("enter:").strip().split(",")))[:n]
enter:1,4,2,5,3,2,4
>>>a
[1, 4, 2, 5]
-------------------------------------------------------------------------------------------------------------
#####DELIMITERS####

print("its","a" ,"good","day")
print("its" ,"good","day")
output:---
its a good day
its good day

###END example###
 
print("its","a" ,"good","day",end=' ')
print("its" ,"good","day")
output:---
its a good day its good day

###SEP example###

print("its","a" ,"good","day",sep='')
output:---
itsagoodday

print("its","a" ,"good","day",sep=' ')
output:---
its a good day

print("its","a" ,"good","day",sep='*')
output:---
its*a*good*day
-------------------------------------------------------------------------------------------------------------
###CONTROL OR C0NDITIONAL STATEMENTS###
1. simple if
2. if else
3. else if(elif)
4. else if ladder
5. nested if
--------------------------------------------------------------------------------------------------------
###LOOPS###
1. FOR LOOP
2. WHILE LOOP

EXAMPLES
n=1
while n<=10:
    print(n,end=' ')
    n+=1
OUTPUT:---
1 2 3 4 5 6 7 8 9 10


for i in range(1,11):
    print(i,end=' ')
print()
OUTPUT:---
1 2 3 4 5 6 7 8 9 10
